package simbionte.ui.component.loading 
{
	import br.com.stimuli.loading.BulkLoaderManager;
	import br.com.stimuli.loading.loadingtypes.LoadingItem;
	import flash.display.DisplayObject;
	import flash.events.Event;
	import flash.events.ProgressEvent;
	import flash.system.LoaderContext;
	import simbionte.display.Container;
	import simbionte.ui.component.AbstractComponent;
	import simbionte.ui.component.IPreloader;
	
	public class MediaLoader extends AbstractComponent
	{
		private var _bulkLoaderManager                   :BulkLoaderManager = BulkLoaderManager.getInstance();
		private var _loadingID                           :String = _bulkLoaderManager.getUniqueID();
		private var _loadingItem                         :LoadingItem;
		
		public function MediaLoader() 
		{
			
		}
		
		override protected function setVariables():void 
		{
			
		}
		
		override protected function setListeners():void 
		{
			
		}
		
		override protected function initialize():void 
		{
			
		}
		
		public function loadMedia(url:String, highPriority:Boolean = false, context:LoaderContext = null, type:String=null):void 
		{
			_bulkLoaderManager.remove(_loadingID);
			
			var props:Object = { };
			props.id = _loadingID;
			if (highPriority)	props.priority	= _bulkLoaderManager.highestPriority;
			if (type)			props.type		= type;
			
			props.context = context;
			
			_loadingItem = _bulkLoaderManager.add(url, props );
			_loadingItem.addEventListener(Event.COMPLETE, loadingItem_complete);
			_loadingItem.addEventListener(ProgressEvent.PROGRESS, loadingItem_progress);
			
			if (preloader) preloader.show();
			
			dispatchEvent(new Event(Event.INIT));
		}
		
		private function loadingItem_complete(e:Event):void 
		{
			if (_loadingItem) container.addChild(DisplayObject(_loadingItem.content));
			
			if(_bulkLoaderManager) _bulkLoaderManager.remove(_loadingID);
			
			if (preloader) preloader.hide();
			
			dispatchEvent(e);
		}
		
		private function loadingItem_progress(e:ProgressEvent):void 
		{
			if (preloader) preloader.progress = Number(Math.round((e.bytesLoaded / e.bytesTotal) * 100));
			
			dispatchEvent(e);
		}
		
		public function cancel():void 
		{
			if (preloader) preloader.hide();
			if(_bulkLoaderManager) _bulkLoaderManager.remove(_loadingID);
			
			dispatchEvent(new Event(Event.CANCEL));
		}
		
		public function get preloader():IPreloader  { return IPreloader(getChildByName("prl_mediaLoader")); }
		public function get container():Container   { return Container(getChildByName("ctn_mediaLoader")); }
		
		override public function destroy():void 
		{
			if (_bulkLoaderManager.bulkLoader.get(_loadingID))
			{
				if (_bulkLoaderManager.bulkLoader.get(_loadingID).percentLoaded != 1) cancel();
			}
			_bulkLoaderManager.remove(_loadingID);
			_bulkLoaderManager  = null;
			_loadingItem        = null;
			
			super.destroy();
		}
		
	}

}